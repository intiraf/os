package two;

import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;
import java.nio.channels.Channels;
import java.nio.channels.FileChannel;
import java.nio.channels.WritableByteChannel;
import java.nio.file.Path;
import java.nio.file.StandardOpenOption;

public class Client {
    public static void main(String[] args) throws IOException {
        Socket socket = new Socket("localhost", 12345);

        // Classic file transfer
        long startTimeClassic = System.nanoTime();
        DataOutputStream classicOutputStream = new DataOutputStream(socket.getOutputStream());
        // Implement classic file transfer logic here
        long endTimeClassic = System.nanoTime();

        // Zero copy file transfer
        long startTimeZeroCopy = System.nanoTime();
        try (FileChannel fileChannel = FileChannel.open(Path.of("D:/os/yourfile.txt"), StandardOpenOption.READ);
             WritableByteChannel socketChannel = Channels.newChannel(socket.getOutputStream())) {
            fileChannel.transferTo(0, fileChannel.size(), socketChannel);
        }
        long endTimeZeroCopy = System.nanoTime();

        System.out.println("Client: Classic Transfer Time: " + (endTimeClassic - startTimeClassic) + " ns");
        System.out.println("Client: Zero Copy Transfer Time: " + (endTimeZeroCopy - startTimeZeroCopy) + " ns");

        socket.close();
    }
}

